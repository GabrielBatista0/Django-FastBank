# Generated by Django 4.2 on 2023-06-06 01:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_fiscal', models.CharField(max_length=20, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('rg', models.CharField(max_length=13)),
                ('foto', models.ImageField(null=True, upload_to='pessoas')),
                ('dt_nascimento', models.DateField()),
                ('dt_abertura', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField()),
                ('agencia', models.IntegerField()),
                ('tipo', models.CharField(choices=[('S', 'SALARIO'), ('D', 'DEPOSITO'), ('P', 'PAGAMENTO')], default='D', max_length=1)),
                ('numero', models.IntegerField()),
                ('saldo', models.DecimalField(decimal_places=2, max_digits=11)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fastbank.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Movimentacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataHora', models.DateTimeField(auto_now=True, null=True)),
                ('operacao', models.CharField(max_length=255)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=6)),
                ('conta_destinatario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conta_destinatario', to='fastbank.conta')),
                ('conta_remetente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='conta_remetente', to='fastbank.conta')),
            ],
        ),
        migrations.CreateModel(
            name='Investimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('C', 'CRIPTOMOEDA'), ('A', 'AÇÃO'), ('P', 'POUPANÇA')], default='C', max_length=1)),
                ('aporte', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1, message='O preço deve ser igual ou maior que 1 real')])),
                ('taxaAdministracao', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1, message='O preço deve ser igual ou maior que 1 real')])),
                ('prazo', models.DateField()),
                ('grauRisco', models.CharField(choices=[('A', 'ALTO'), ('M', 'MEDIO'), ('B', 'BAIXO')], default='M', max_length=1)),
                ('rentabilidade', models.DecimalField(decimal_places=2, max_digits=6)),
                ('finalizado', models.BooleanField()),
                ('conta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fastbank.conta')),
            ],
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', models.CharField(max_length=255)),
                ('cidade', models.CharField(max_length=255)),
                ('bairro', models.CharField(max_length=255)),
                ('uf', models.CharField(max_length=2)),
                ('cep', models.CharField(max_length=9)),
                ('n_casa', models.IntegerField()),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fastbank.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Emprestimo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_solicitacao', models.DateField(auto_now=True)),
                ('valor_solicitado', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1, message='O preço deve ser igual ou maior que 1 real')])),
                ('juros', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1, message='O preço deve ser igual ou maior que 1 real')])),
                ('numero_parcela', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1, message='O preço deve ser igual ou maior que 1 real')])),
                ('valor_parcela', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1, message='O preço deve ser igual ou maior que 1 real')])),
                ('aprovado', models.BooleanField()),
                ('dt_aprovado', models.DateField(null=True)),
                ('conta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fastbank.conta')),
            ],
        ),
        migrations.CreateModel(
            name='Contato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefone', models.CharField(max_length=14)),
                ('ramal', models.IntegerField(null=True)),
                ('observacao', models.TextField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fastbank.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Cartao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('limite', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1, message='O preço deve ser igual ou maior que 1 real')])),
                ('validade', models.DateField()),
                ('cvv', models.IntegerField()),
                ('bandeira', models.CharField(max_length=60)),
                ('situacao', models.CharField(choices=[('B', 'BLOQUEADO'), ('D', 'DESBLOQUEADO')], default='B', max_length=1)),
                ('conta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fastbank.conta')),
            ],
        ),
    ]
